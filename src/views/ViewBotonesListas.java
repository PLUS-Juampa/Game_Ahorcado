/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.Color;

/**
 *
 * @author juampa
 */
public class ViewBotonesListas extends javax.swing.JFrame {

    /**
     * Creates new form ViewBotonesListas
     */
    public ViewBotonesListas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelColores = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        cboColores = new javax.swing.JComboBox<>();
        cboColorRojo = new javax.swing.JComboBox<>();
        cboColoresVerde = new javax.swing.JComboBox<>();
        cboColoresAzul = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelColores.setBackground(new java.awt.Color(87, 124, 254));

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        cboColores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona Opción", "Rojo", "Verde", "Azul", "Amarillo" }));
        cboColores.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboColoresItemStateChanged(evt);
            }
        });
        cboColores.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cboColoresPropertyChange(evt);
            }
        });

        cboColorRojo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rojo", "10", "50", "100", "150", "200", "250" }));
        cboColorRojo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboColorRojoItemStateChanged(evt);
            }
        });
        cboColorRojo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cboColorRojoPropertyChange(evt);
            }
        });

        cboColoresVerde.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Verde", "10", "50", "100", "150", "200", "250" }));
        cboColoresVerde.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboColoresVerdeItemStateChanged(evt);
            }
        });
        cboColoresVerde.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cboColoresVerdePropertyChange(evt);
            }
        });

        cboColoresAzul.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Azul", "10", "50", "100", "150", "200", "250" }));
        cboColoresAzul.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboColoresAzulItemStateChanged(evt);
            }
        });
        cboColoresAzul.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cboColoresAzulPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout panelColoresLayout = new javax.swing.GroupLayout(panelColores);
        panelColores.setLayout(panelColoresLayout);
        panelColoresLayout.setHorizontalGroup(
            panelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelColoresLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(cboColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(panelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboColorRojo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboColoresAzul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboColoresVerde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        panelColoresLayout.setVerticalGroup(
            panelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelColoresLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(panelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelColoresLayout.createSequentialGroup()
                        .addGroup(panelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboColorRojo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboColoresVerde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(cboColoresAzul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(175, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboColoresPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cboColoresPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_cboColoresPropertyChange

    private void cboColoresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboColoresItemStateChanged
        // TODO add your handling code here:
        String color = cboColores.getSelectedItem().toString();
        System.out.println("Color: " + color);
        switch (color.toLowerCase()) {    // toLoweCase() para convertir todo a minúscula
            case "rojo":
                panelColores.setBackground(new Color(15, 100, 100));
                break;
            case "verde":
                panelColores.setBackground(Color.green);
                break;
            case "azul":
                panelColores.setBackground(Color.blue);
                break;
            case "amarillo":
                panelColores.setBackground(Color.yellow);
                break;
            default:
                panelColores.setBackground(Color.GRAY);
        }

    }//GEN-LAST:event_cboColoresItemStateChanged

    private void cboColorRojoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboColorRojoItemStateChanged
        // TODO add your handling code here:
        String color = cboColores.getSelectedItem().toString();
        if(color.equals("Rojo")){
            panelColores.setBackground(new Color(250, 0, 0));
            return;
        }
        
        int numRojo = Integer.valueOf(cboColorRojo.getSelectedItem().toString());

        switch (numRojo) {    // toLoweCase() para convertir todo a minúscula
            case 10:
                panelColores.setBackground(new Color(10, 0, 0));
                break;
            case 50:
                panelColores.setBackground(new Color(50, 0, 0));
                break;
            case 100:
                panelColores.setBackground(new Color(100, 0, 0));
                break;
            case 150:
                panelColores.setBackground(new Color(150, 0, 0));
                break;
            case 200:
                panelColores.setBackground(new Color(200, 0, 0));
                break;
            case 250:
                panelColores.setBackground(new Color(250, 0, 0));
                break;
            default:
                panelColores.setBackground(new Color(250, 0, 0));
        }
    }//GEN-LAST:event_cboColorRojoItemStateChanged

    private void cboColorRojoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cboColorRojoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cboColorRojoPropertyChange

    private void cboColoresVerdeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboColoresVerdeItemStateChanged
        // TODO add your handling code here:
        String color = cboColores.getSelectedItem().toString();
        
        if(color.equals("Verde")){
            panelColores.setBackground(new Color(0, 250, 0));
            return;
        }
        
        int numVerde = Integer.valueOf(cboColoresVerde.getSelectedItem().toString());

        switch (numVerde) {    // toLoweCase() para convertir todo a minúscula
            case 10:
                panelColores.setBackground(new Color(0, 10, 0));
                break;
            case 50:
                panelColores.setBackground(new Color(0, 50, 0));
                break;
            case 100:
                panelColores.setBackground(new Color(0, 100, 0));
                break;
            case 150:
                panelColores.setBackground(new Color(0, 150, 0));
                break;
            case 200:
                panelColores.setBackground(new Color(0, 200, 0));
                break;
            case 250:
                panelColores.setBackground(new Color(0, 250, 0));
                break;
            default:
                panelColores.setBackground(new Color(0, 250, 0));
        }
    }//GEN-LAST:event_cboColoresVerdeItemStateChanged

    private void cboColoresVerdePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cboColoresVerdePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cboColoresVerdePropertyChange

    private void cboColoresAzulItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboColoresAzulItemStateChanged
        // TODO add your handling code here:
        String color = cboColores.getSelectedItem().toString();
        
        if(color.equals("Azul")){
            panelColores.setBackground(new Color(0, 0, 250));
            return;
        }
        
        int numAzul = Integer.valueOf(cboColoresAzul.getSelectedItem().toString());

        switch (numAzul) {    // toLoweCase() para convertir todo a minúscula
            case 10:
                panelColores.setBackground(new Color(0, 0, 10));
                break;
            case 50:
                panelColores.setBackground(new Color(0, 0, 50));
                break;
            case 100:
                panelColores.setBackground(new Color(0, 0, 100));
                break;
            case 150:
                panelColores.setBackground(new Color(0, 0, 150));
                break;
            case 200:
                panelColores.setBackground(new Color(0, 0, 200));
                break;
            case 250:
                panelColores.setBackground(new Color(0, 0, 250));
                break;
            default:
                panelColores.setBackground(new Color(0, 0, 250));
        }
    }//GEN-LAST:event_cboColoresAzulItemStateChanged

    private void cboColoresAzulPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cboColoresAzulPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cboColoresAzulPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewBotonesListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewBotonesListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewBotonesListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewBotonesListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewBotonesListas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboColorRojo;
    private javax.swing.JComboBox<String> cboColores;
    private javax.swing.JComboBox<String> cboColoresAzul;
    private javax.swing.JComboBox<String> cboColoresVerde;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelColores;
    // End of variables declaration//GEN-END:variables
}
